extends ../layout_admin

block stylesheets
  link(rel="stylesheet", href="/styles/custom_detail_playlist.css")

block content

  .container
    h1= t('playlist.titleDetail', { title: playlist.title })
    .row
      .col-md-4
        if playlist.avatar
          img(src=playlist.avatar, alt=playlist.title, class='img-fluid rounded')
        else
          .bg-secondary.text-white.rounded-circle.d-flex.align-items-center.justify-content-center.no-image
            = t('playlist.noImage')
      .col-md-8
        p
          strong= t('playlist.type')
          | #{playlist.type}
        p
          strong= t('playlist.createdAt')
          | #{new Date(playlist.createdAt).toDateString()}
        p
          strong= t('playlist.numOfSongs')
          | #{length}
        .mt-4
          a.btn.btn-primary(href=`/admin/playlists/update/${playlist.id}`) #{t('common.edit')}
          a.btn.btn-danger(href=`/admin/playlists/delete/${playlist.id}`) #{t('common.delete')}
          a.btn.btn-success(href='/admin/playlists') #{t('playlist.listOfSongsTitle')}

    h1.text-center.mb-4= t('playlist.listOfSongs')
    ul.list-group
      each song, index in playlist.songs
        li.list-group-item.d-flex.justify-content-between.align-items-center.playlist-song(data-song-url=song.url)
          .d-flex.align-items-center
            if song.imageUrl
              img(src=song.imageUrl, alt=song.title, class='rounded-circle song-image')
            else
              .bg-secondary.text-white.rounded-circle.d-flex.align-items-center.justify-content-center.no-image
                = t('playlist.noImage')
            .ml-2
              a(href=`/musics/${song.id}`, class='text-decoration-none')
                h5.mb-1= song.title
              small: = song.artist  
              | &nbsp;
              small : #{new Date(song.createdAt).toDateString()}
          .mt-4
            button.btn.btn-primary(type="button" data-toggle="modal" data-target="#audioPlayerModal" onclick=`updateAudioPlayer("${song.url}", ${index})`) #{t('playlist.play')}
            form(action=`/admin/playlists/remove-song/${playlist.id}`, method='post', class='form-inline')
              input(type='hidden', name='songId', value=song.id)
              button.btn.btn-danger(type='submit') #{t('playlist.remove')}

    h1.text-center.mt-4
      button.btn.btn-info(type="button", data-toggle="modal" data-target="#findMoreModal") #{t('playlist.findMore')}

    .modal.fade(id='findMoreModal', tabindex='-1', role='dialog')
      .modal-dialog(role='document')
        .modal-content
          .modal-header
            h5.modal-title= t('playlist.findMoreSongs')
            button.close(type='button', data-dismiss='modal', aria-label='Close')
              span(aria-hidden='true')
          .modal-body
            ul.list-group
              each song in availableSongs
                li.list-group-item.d-flex.justify-content-between.align-items-center
                  .d-flex.align-items-center
                    if song.imageUrl
                      img(src=song.imageUrl, alt=song.title, class='rounded-circle song-image')
                    else
                      .bg-secondary.text-white.rounded-circle.d-flex.align-items-center.justify-content-center.no-image
                        = t('playlist.noImage')
                    .ml-2
                      a(href=`/musics/${song.id}`, class='text-decoration-none text-dark')
                        h5.mb-1= song.title
                      small: = song.artist  
                      | &nbsp;
                      small : #{new Date(song.createdAt).toDateString()}
                  form(action=`/admin/playlists/add-song/${playlist.id}`, method='post', class='form-inline')
                    input(type='hidden', name='songId', value=song.id)
                    button.btn.btn-success(type='submit') #{t('playlist.add')}

  if playlist
    #playlist-data(playlist-datas=playlist)
  if firstSong
    #first-song(data-song-url=firstSong.url)
