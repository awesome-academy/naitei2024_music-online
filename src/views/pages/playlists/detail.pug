extends ../../layout_user

block stylesheets
  link(rel="stylesheet", href="/styles/custom_detail_playlist.css")

block content
  .container
    h1= t('playlist.titleDetail', { title: playlist.title })
    .row
      .col-md-4
        if playlist.avatar
          img(src=playlist.avatar, alt=playlist.title, class='img-fluid rounded')
        else
          .bg-secondary.text-white.rounded-circle.d-flex.align-items-center.justify-content-center.no-image
            = t('playlist.noImage')
      .col-md-8
        p
          strong= t('playlist.type')
          | #{playlist.type}
        p
          strong= t('playlist.createdAt')
          | #{new Date(playlist.createdAt).toDateString()}
        p
          strong= t('playlist.numOfSongs')
          | #{length}
        if playlist.type === userType
          .mt-4
            a.btn.btn-danger(href=`/user/playlists/delete/${playlist.id}`) #{t('common.delete')}
    h1.text-center.mb-4= t('playlist.listOfSongs')
    ul.list-group
      each song, index in playlist.songs
        li.list-group-item.d-flex.justify-content-between.align-items-center.playlist-song(data-song-url=song.url)
          .d-flex.align-items-center
            if song.imageUrl
              img(src=song.imageUrl, alt=song.title, class='rounded-circle song-image')
            else
              .bg-secondary.text-white.rounded-circle.d-flex.align-items-center.justify-content-center.no-image
                = t('playlist.noImage')
            .ml-2
              if song.status !== currentStatus
                a(href=`/user/detail/musics/${song.id}`, class='text-decoration-none')
                  h5.mb-1= song.title
                  small: = song.author.fullname  
                  | &nbsp;
                  small : #{new Date(song.createdAt).toDateString()}
              else
                h5.mb-1.text-muted= song.title
                small.text-muted= song.author.fullname  
                | &nbsp;
                small.text-muted : #{new Date(song.createdAt).toDateString()}
          .mt-4
            button.btn.btn-primary(
                type="button"
                data-toggle="modal"
                data-target="#audioPlayerModal"
                onclick=`updateAudioPlayer("${song.url}", "${song.imageUrl}", "${song.title}", "${song.author.fullname}", ${index})`
                class= song.status === currentStatus ? 'disabled' : ''
                style= song.status === currentStatus ? 'cursor: not-allowed; pointer-events: none;' : ''
              ) #{t('playlist.play')}
            if playlist.type === userType
              form(action=`/user/playlists/remove-song/${playlist.id}`, method='post', class='form-inline')
                input(type='hidden', name='songId', value=song.id)
                button.btn.btn-danger(type='submit') #{t('playlist.remove')}

    if playlist.type === userType
      h1.text-center.mt-4
        button.btn.btn-info(type="button", data-toggle="modal" data-target="#findMoreModal") #{t('playlist.findMore')}
    if playlist.type === userType
      .modal.fade(id='findMoreModal', tabindex='-1', role='dialog')
        .modal-dialog(role='document')
          .modal-content
            .modal-header
              h5.modal-title= t('playlist.findMoreSongs')
              button.close(type='button', data-dismiss='modal', aria-label='Close')
                span(aria-hidden='true')
            .modal-body
              ul.list-group.scrollable-list
                each song in availableSongs
                  li.list-group-item.d-flex.justify-content-between.align-items-center
                    .d-flex.align-items-center
                      if song.imageUrl
                        img(src=song.imageUrl, alt=song.title, class='rounded-circle song-image')
                      else
                        .bg-secondary.text-white.rounded-circle.d-flex.align-items-center.justify-content-center.no-image
                          = t('playlist.noImage')
                      .ml-2
                        a(href=`/user/detail/musics/${song.id}`, class='text-decoration-none')
                          h5.mb-1= song.title
                          small: = song.artist
                          | &nbsp;
                          small : #{new Date(song.createdAt).toDateString()}
                    form(action=`/user/playlists/add-song/${playlist.id}`, method='post', class='form-inline')
                      input(type='hidden', name='songId', value=song.id)
                      button.btn.btn-success(type='submit') #{t('playlist.add')}

  if playlist
    #playlist-data(playlist-datas=playlist)
  if firstSong
    #first-song(data-song-url=firstSong)
